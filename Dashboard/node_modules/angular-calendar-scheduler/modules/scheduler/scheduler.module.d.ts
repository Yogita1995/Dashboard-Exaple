import { ModuleWithProviders, InjectionToken } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './calendar-scheduler-view.component';
import * as ɵngcc2 from './calendar-scheduler-hour-segment.component';
import * as ɵngcc3 from './calendar-scheduler-header.component';
import * as ɵngcc4 from './calendar-scheduler-event.component';
import * as ɵngcc5 from './calendar-scheduler-event-title.component';
import * as ɵngcc6 from './calendar-scheduler-event-content.component';
import * as ɵngcc7 from './calendar-scheduler-event-actions.component';
import * as ɵngcc8 from './pipes/scheduler-event-title.pipe';
import * as ɵngcc9 from './pipes/calendar-scheduler-date.pipe';
import * as ɵngcc10 from '@angular/common';
import * as ɵngcc11 from 'angular-calendar';
export * from './calendar-scheduler-view.component';
export * from './formatters/scheduler-date-formatter.provider';
export * from './formatters/scheduler-event-title-formatter.provider';
export * from './pipes/scheduler-event-title.pipe';
export * from './utils/calendar-scheduler-utils';
export * from './utils/calendar-scheduler-utils.provider';
export * from '../common/utils';
export * from './models';
import { SchedulerConfig } from './scheduler-config';
export declare const SCHEDULER_CONFIG: InjectionToken<unknown>;
export declare function provideSchedulerConfig(config: SchedulerConfig): SchedulerConfig;
/**
 * The main module of this library. Example usage:
 *
 * ```typescript
 * import { CalendarModule, DateAdapter } from 'angular-calendar';
 * import { adapterFactory } from 'angular-calendar/date-adapters/date-fns';
 * import { SchedulerModule } from 'angular-calendar-scheduler';
 *
 * @NgModule({
 *  imports: [
 *     CalendarModule.forRoot({
 *       provide: DateAdapter,
 *       useFactory: adapterFactory
 *     }),
 *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })
 *   ]
 * })
 * class MyModule {}
 * ```
 *
 */
export declare class SchedulerModule {
    static forRoot(config?: SchedulerConfig): ModuleWithProviders<SchedulerModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SchedulerModule, [typeof ɵngcc1.CalendarSchedulerViewComponent, typeof ɵngcc2.CalendarSchedulerHourSegmentComponent, typeof ɵngcc3.CalendarSchedulerHeaderComponent, typeof ɵngcc4.CalendarSchedulerEventComponent, typeof ɵngcc5.CalendarSchedulerEventTitleComponent, typeof ɵngcc6.CalendarSchedulerEventContentComponent, typeof ɵngcc7.CalendarSchedulerEventActionsComponent, typeof ɵngcc8.SchedulerEventTitlePipe, typeof ɵngcc9.CalendarSchedulerDatePipe], [typeof ɵngcc10.CommonModule, typeof ɵngcc11.CalendarModule], [typeof ɵngcc9.CalendarSchedulerDatePipe, typeof ɵngcc1.CalendarSchedulerViewComponent, typeof ɵngcc2.CalendarSchedulerHourSegmentComponent, typeof ɵngcc3.CalendarSchedulerHeaderComponent, typeof ɵngcc4.CalendarSchedulerEventComponent, typeof ɵngcc5.CalendarSchedulerEventTitleComponent, typeof ɵngcc6.CalendarSchedulerEventContentComponent, typeof ɵngcc7.CalendarSchedulerEventActionsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SchedulerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZWR1bGVyLm1vZHVsZS5kLnRzIiwic291cmNlcyI6WyJzY2hlZHVsZXIubW9kdWxlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NhbGVuZGFyLXNjaGVkdWxlci12aWV3LmNvbXBvbmVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZm9ybWF0dGVycy9zY2hlZHVsZXItZGF0ZS1mb3JtYXR0ZXIucHJvdmlkZXInO1xyXG5leHBvcnQgKiBmcm9tICcuL2Zvcm1hdHRlcnMvc2NoZWR1bGVyLWV2ZW50LXRpdGxlLWZvcm1hdHRlci5wcm92aWRlcic7XHJcbmV4cG9ydCAqIGZyb20gJy4vcGlwZXMvc2NoZWR1bGVyLWV2ZW50LXRpdGxlLnBpcGUnO1xyXG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2NhbGVuZGFyLXNjaGVkdWxlci11dGlscyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvY2FsZW5kYXItc2NoZWR1bGVyLXV0aWxzLnByb3ZpZGVyJztcclxuZXhwb3J0ICogZnJvbSAnLi4vY29tbW9uL3V0aWxzJztcclxuZXhwb3J0ICogZnJvbSAnLi9tb2RlbHMnO1xyXG5pbXBvcnQgeyBTY2hlZHVsZXJDb25maWcgfSBmcm9tICcuL3NjaGVkdWxlci1jb25maWcnO1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBTQ0hFRFVMRVJfQ09ORklHOiBJbmplY3Rpb25Ub2tlbjx1bmtub3duPjtcclxuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gcHJvdmlkZVNjaGVkdWxlckNvbmZpZyhjb25maWc6IFNjaGVkdWxlckNvbmZpZyk6IFNjaGVkdWxlckNvbmZpZztcclxuLyoqXHJcbiAqIFRoZSBtYWluIG1vZHVsZSBvZiB0aGlzIGxpYnJhcnkuIEV4YW1wbGUgdXNhZ2U6XHJcbiAqXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgQ2FsZW5kYXJNb2R1bGUsIERhdGVBZGFwdGVyIH0gZnJvbSAnYW5ndWxhci1jYWxlbmRhcic7XHJcbiAqIGltcG9ydCB7IGFkYXB0ZXJGYWN0b3J5IH0gZnJvbSAnYW5ndWxhci1jYWxlbmRhci9kYXRlLWFkYXB0ZXJzL2RhdGUtZm5zJztcclxuICogaW1wb3J0IHsgU2NoZWR1bGVyTW9kdWxlIH0gZnJvbSAnYW5ndWxhci1jYWxlbmRhci1zY2hlZHVsZXInO1xyXG4gKlxyXG4gKiBATmdNb2R1bGUoe1xyXG4gKiAgaW1wb3J0czogW1xyXG4gKiAgICAgQ2FsZW5kYXJNb2R1bGUuZm9yUm9vdCh7XHJcbiAqICAgICAgIHByb3ZpZGU6IERhdGVBZGFwdGVyLFxyXG4gKiAgICAgICB1c2VGYWN0b3J5OiBhZGFwdGVyRmFjdG9yeVxyXG4gKiAgICAgfSksXHJcbiAqICAgICBTY2hlZHVsZXJNb2R1bGUuZm9yUm9vdCh7IGxvY2FsZTogJ2VuJywgaGVhZGVyRGF0ZUZvcm1hdDogJ2RheXNSYW5nZScgfSlcclxuICogICBdXHJcbiAqIH0pXHJcbiAqIGNsYXNzIE15TW9kdWxlIHt9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2NoZWR1bGVyTW9kdWxlIHtcclxuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IFNjaGVkdWxlckNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2NoZWR1bGVyTW9kdWxlPjtcclxufVxyXG4iXX0=