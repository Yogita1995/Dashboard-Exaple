import { EventEmitter, TemplateRef, OnInit, ElementRef, ChangeDetectorRef, AfterContentChecked } from '@angular/core';
import { SchedulerViewDay, CalendarSchedulerEvent, SchedulerViewEvent } from './models';
import * as ɵngcc0 from '@angular/core';
export declare class CalendarSchedulerEventComponent implements OnInit, AfterContentChecked {
    private hostElement;
    protected changeDetectorRef: ChangeDetectorRef;
    title: string;
    day: SchedulerViewDay;
    event: SchedulerViewEvent;
    container: HTMLElement;
    showContent: boolean;
    showActions: boolean;
    showStatus: boolean;
    customTemplate: TemplateRef<any>;
    eventTitleTemplate: TemplateRef<any>;
    eventClicked: EventEmitter<{
        event: CalendarSchedulerEvent;
    }>;
    constructor(hostElement: ElementRef, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentChecked(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    /**
     * @hidden
     */
    onEventClick(mouseEvent: MouseEvent, event: CalendarSchedulerEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CalendarSchedulerEventComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CalendarSchedulerEventComponent, "calendar-scheduler-event", never, { "showContent": "showContent"; "showActions": "showActions"; "showStatus": "showStatus"; "title": "title"; "day": "day"; "event": "event"; "container": "container"; "customTemplate": "customTemplate"; "eventTitleTemplate": "eventTitleTemplate"; }, { "eventClicked": "eventClicked"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1zY2hlZHVsZXItZXZlbnQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiwgT25Jbml0LCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiwgQWZ0ZXJDb250ZW50Q2hlY2tlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTY2hlZHVsZXJWaWV3RGF5LCBDYWxlbmRhclNjaGVkdWxlckV2ZW50LCBTY2hlZHVsZXJWaWV3RXZlbnQgfSBmcm9tICcuL21vZGVscyc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhbGVuZGFyU2NoZWR1bGVyRXZlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudENoZWNrZWQge1xyXG4gICAgcHJpdmF0ZSBob3N0RWxlbWVudDtcclxuICAgIHByb3RlY3RlZCBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWY7XHJcbiAgICB0aXRsZTogc3RyaW5nO1xyXG4gICAgZGF5OiBTY2hlZHVsZXJWaWV3RGF5O1xyXG4gICAgZXZlbnQ6IFNjaGVkdWxlclZpZXdFdmVudDtcclxuICAgIGNvbnRhaW5lcjogSFRNTEVsZW1lbnQ7XHJcbiAgICBzaG93Q29udGVudDogYm9vbGVhbjtcclxuICAgIHNob3dBY3Rpb25zOiBib29sZWFuO1xyXG4gICAgc2hvd1N0YXR1czogYm9vbGVhbjtcclxuICAgIGN1c3RvbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZXZlbnRUaXRsZVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZXZlbnRDbGlja2VkOiBFdmVudEVtaXR0ZXI8e1xyXG4gICAgICAgIGV2ZW50OiBDYWxlbmRhclNjaGVkdWxlckV2ZW50O1xyXG4gICAgfT47XHJcbiAgICBjb25zdHJ1Y3Rvcihob3N0RWxlbWVudDogRWxlbWVudFJlZiwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcclxuICAgIG9uTW91c2VFbnRlcigpOiB2b2lkO1xyXG4gICAgb25Nb3VzZUxlYXZlKCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIEBoaWRkZW5cclxuICAgICAqL1xyXG4gICAgb25FdmVudENsaWNrKG1vdXNlRXZlbnQ6IE1vdXNlRXZlbnQsIGV2ZW50OiBDYWxlbmRhclNjaGVkdWxlckV2ZW50KTogdm9pZDtcclxufVxyXG4iXX0=