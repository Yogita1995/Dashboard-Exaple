import { Component, Input } from '@angular/core';
var CalendarSchedulerEventActionsComponent = /** @class */ (function () {
    function CalendarSchedulerEventActionsComponent() {
        this.actions = [];
    }
    CalendarSchedulerEventActionsComponent.prototype.ngOnInit = function () {
        this.setupActions();
    };
    CalendarSchedulerEventActionsComponent.prototype.ngOnChanges = function (changes) {
        if (changes.event) {
            this.setupActions();
        }
    };
    CalendarSchedulerEventActionsComponent.prototype.setupActions = function () {
        this.actions = this.event.isCancelled
            ? this.event.actions.filter(function (a) { return !a.when || a.when === 'cancelled'; })
            : this.event.isDisabled
                ? this.event.actions.filter(function (a) { return !a.when || a.when === 'disabled'; })
                : this.event.actions.filter(function (a) { return !a.when || a.when === 'enabled'; });
    };
    /**
     * @hidden
     */
    CalendarSchedulerEventActionsComponent.prototype.onActionClick = function (mouseEvent, action, event) {
        if (mouseEvent.stopPropagation) {
            mouseEvent.stopPropagation();
        }
        action.onClick(event);
    };
    CalendarSchedulerEventActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'calendar-scheduler-event-actions',
                    template: "\n        <span *ngIf=\"event.actions\"\n            class=\"cal-scheduler-event-actions\">\n            <a\n                class=\"cal-scheduler-event-action\"\n                href=\"javascript:;\"\n                *ngFor=\"let action of actions\"\n                (mwlClick)=\"onActionClick($event, action, event)\"\n                [ngClass]=\"action.cssClass\"\n                [innerHtml]=\"action.label\"\n                [title]=\"action.title\">\n            </a>\n        </span>\n    ",
                    host: {
                        'class': 'cal-scheduler-event-actions-container'
                    }
                },] }
    ];
    CalendarSchedulerEventActionsComponent.propDecorators = {
        event: [{ type: Input }]
    };
    return CalendarSchedulerEventActionsComponent;
}());
export { CalendarSchedulerEventActionsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1jYWxlbmRhci1zY2hlZHVsZXIvIiwic291cmNlcyI6WyJtb2R1bGVzL3NjaGVkdWxlci9jYWxlbmRhci1zY2hlZHVsZXItZXZlbnQtYWN0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQW9DLE1BQU0sZUFBZSxDQUFDO0FBTW5GO0lBQUE7UUF3QlcsWUFBTyxHQUFtQyxFQUFFLENBQUM7SUE4QnhELENBQUM7SUE1QlUseURBQVEsR0FBZjtRQUNJLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU0sNERBQVcsR0FBbEIsVUFBbUIsT0FBc0I7UUFDckMsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3ZCO0lBQ0wsQ0FBQztJQUVPLDZEQUFZLEdBQXBCO1FBQ0ksSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7WUFDakMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFDLENBQStCLElBQUssT0FBQSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxXQUFXLEVBQWpDLENBQWlDLENBQUM7WUFDbkcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVTtnQkFDbkIsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFDLENBQStCLElBQUssT0FBQSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxVQUFVLEVBQWhDLENBQWdDLENBQUM7Z0JBQ2xHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBQyxDQUErQixJQUFLLE9BQUEsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUEvQixDQUErQixDQUFDLENBQUM7SUFDOUcsQ0FBQztJQUVEOztPQUVHO0lBQ0gsOERBQWEsR0FBYixVQUFjLFVBQXNCLEVBQUUsTUFBb0MsRUFBRSxLQUE2QjtRQUNyRyxJQUFJLFVBQVUsQ0FBQyxlQUFlLEVBQUU7WUFDNUIsVUFBVSxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ2hDO1FBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDOztnQkFyREosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFFBQVEsRUFBRSxrZkFhVDtvQkFDRCxJQUFJLEVBQUU7d0JBQ0YsT0FBTyxFQUFFLHVDQUF1QztxQkFDbkQ7aUJBQ0o7Ozt3QkFHSSxLQUFLOztJQWdDViw2Q0FBQztDQUFBLEFBdERELElBc0RDO1NBbENZLHNDQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgICBDYWxlbmRhclNjaGVkdWxlckV2ZW50LFxyXG4gICAgQ2FsZW5kYXJTY2hlZHVsZXJFdmVudEFjdGlvblxyXG59IGZyb20gJy4vbW9kZWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdjYWxlbmRhci1zY2hlZHVsZXItZXZlbnQtYWN0aW9ucycsXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgICAgIDxzcGFuICpuZ0lmPVwiZXZlbnQuYWN0aW9uc1wiXHJcbiAgICAgICAgICAgIGNsYXNzPVwiY2FsLXNjaGVkdWxlci1ldmVudC1hY3Rpb25zXCI+XHJcbiAgICAgICAgICAgIDxhXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImNhbC1zY2hlZHVsZXItZXZlbnQtYWN0aW9uXCJcclxuICAgICAgICAgICAgICAgIGhyZWY9XCJqYXZhc2NyaXB0OjtcIlxyXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGFjdGlvbiBvZiBhY3Rpb25zXCJcclxuICAgICAgICAgICAgICAgIChtd2xDbGljayk9XCJvbkFjdGlvbkNsaWNrKCRldmVudCwgYWN0aW9uLCBldmVudClcIlxyXG4gICAgICAgICAgICAgICAgW25nQ2xhc3NdPVwiYWN0aW9uLmNzc0NsYXNzXCJcclxuICAgICAgICAgICAgICAgIFtpbm5lckh0bWxdPVwiYWN0aW9uLmxhYmVsXCJcclxuICAgICAgICAgICAgICAgIFt0aXRsZV09XCJhY3Rpb24udGl0bGVcIj5cclxuICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgIGAsXHJcbiAgICBob3N0OiB7XHJcbiAgICAgICAgJ2NsYXNzJzogJ2NhbC1zY2hlZHVsZXItZXZlbnQtYWN0aW9ucy1jb250YWluZXInXHJcbiAgICB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDYWxlbmRhclNjaGVkdWxlckV2ZW50QWN0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuXHJcbiAgICBASW5wdXQoKSBldmVudDogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudDtcclxuXHJcbiAgICBwdWJsaWMgYWN0aW9uczogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudEFjdGlvbltdID0gW107XHJcblxyXG4gICAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2V0dXBBY3Rpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgICAgICBpZiAoY2hhbmdlcy5ldmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldHVwQWN0aW9ucygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldHVwQWN0aW9ucygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmFjdGlvbnMgPSB0aGlzLmV2ZW50LmlzQ2FuY2VsbGVkXHJcbiAgICAgICAgICAgID8gdGhpcy5ldmVudC5hY3Rpb25zLmZpbHRlcigoYTogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudEFjdGlvbikgPT4gIWEud2hlbiB8fCBhLndoZW4gPT09ICdjYW5jZWxsZWQnKVxyXG4gICAgICAgICAgICA6IHRoaXMuZXZlbnQuaXNEaXNhYmxlZFxyXG4gICAgICAgICAgICAgICAgPyB0aGlzLmV2ZW50LmFjdGlvbnMuZmlsdGVyKChhOiBDYWxlbmRhclNjaGVkdWxlckV2ZW50QWN0aW9uKSA9PiAhYS53aGVuIHx8IGEud2hlbiA9PT0gJ2Rpc2FibGVkJylcclxuICAgICAgICAgICAgICAgIDogdGhpcy5ldmVudC5hY3Rpb25zLmZpbHRlcigoYTogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudEFjdGlvbikgPT4gIWEud2hlbiB8fCBhLndoZW4gPT09ICdlbmFibGVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaGlkZGVuXHJcbiAgICAgKi9cclxuICAgIG9uQWN0aW9uQ2xpY2sobW91c2VFdmVudDogTW91c2VFdmVudCwgYWN0aW9uOiBDYWxlbmRhclNjaGVkdWxlckV2ZW50QWN0aW9uLCBldmVudDogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChtb3VzZUV2ZW50LnN0b3BQcm9wYWdhdGlvbikge1xyXG4gICAgICAgICAgICBtb3VzZUV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYWN0aW9uLm9uQ2xpY2soZXZlbnQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==