import { ElementRef, OnDestroy, Renderer2, NgZone, ChangeDetectorRef, QueryList, TemplateRef, AfterContentInit } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { PrimeNGConfig } from 'primeng/api';
import { Confirmation } from 'primeng/api';
import { ConfirmationService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
export declare class ConfirmDialog implements AfterContentInit, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    private cd;
    config: PrimeNGConfig;
    header: string;
    icon: string;
    message: string;
    style: any;
    styleClass: string;
    maskStyleClass: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptAriaLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectAriaLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    closeOnEscape: boolean;
    blockScroll: boolean;
    rtl: boolean;
    closable: boolean;
    appendTo: any;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    transitionOptions: string;
    focusTrap: boolean;
    defaultFocus: string;
    get visible(): any;
    set visible(value: any);
    get position(): string;
    set position(value: string);
    footer: any;
    contentViewChild: ElementRef;
    templates: QueryList<any>;
    ngAfterContentInit(): void;
    footerTemplate: TemplateRef<any>;
    confirmation: Confirmation;
    _visible: boolean;
    maskVisible: boolean;
    documentEscapeListener: any;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    contentContainer: HTMLDivElement;
    subscription: Subscription;
    preWidth: number;
    _position: string;
    transformOptions: any;
    confirmationOptions: Confirmation;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone, cd: ChangeDetectorRef, config: PrimeNGConfig);
    option(name: string): any;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    getElementToFocus(): any;
    appendContainer(): void;
    restoreAppend(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    moveOnTop(): void;
    getMaskClass(): {
        'p-dialog-mask p-component-overlay': boolean;
        'p-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
    get acceptButtonLabel(): string;
    get rejectButtonLabel(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmDialog, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmDialog, "p-confirmDialog", never, { "acceptIcon": "acceptIcon"; "acceptVisible": "acceptVisible"; "rejectIcon": "rejectIcon"; "rejectVisible": "rejectVisible"; "closeOnEscape": "closeOnEscape"; "blockScroll": "blockScroll"; "closable": "closable"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "transitionOptions": "transitionOptions"; "focusTrap": "focusTrap"; "defaultFocus": "defaultFocus"; "visible": "visible"; "position": "position"; "header": "header"; "icon": "icon"; "message": "message"; "style": "style"; "styleClass": "styleClass"; "maskStyleClass": "maskStyleClass"; "acceptLabel": "acceptLabel"; "acceptAriaLabel": "acceptAriaLabel"; "rejectLabel": "rejectLabel"; "rejectAriaLabel": "rejectAriaLabel"; "acceptButtonStyleClass": "acceptButtonStyleClass"; "rejectButtonStyleClass": "rejectButtonStyleClass"; "rtl": "rtl"; "appendTo": "appendTo"; "key": "key"; }, {}, ["footer", "templates"], ["p-footer"]>;
}
export declare class ConfirmDialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmDialogModule, [typeof ConfirmDialog], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmDialog, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmDialogModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZy5kLnRzIiwic291cmNlcyI6WyJjb25maXJtZGlhbG9nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBSZW5kZXJlcjIsIE5nWm9uZSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBQcmltZU5HQ29uZmlnIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybURpYWxvZyBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcml2YXRlIGNvbmZpcm1hdGlvblNlcnZpY2U7XG4gICAgem9uZTogTmdab25lO1xuICAgIHByaXZhdGUgY2Q7XG4gICAgY29uZmlnOiBQcmltZU5HQ29uZmlnO1xuICAgIGhlYWRlcjogc3RyaW5nO1xuICAgIGljb246IHN0cmluZztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgbWFza1N0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBhY2NlcHRJY29uOiBzdHJpbmc7XG4gICAgYWNjZXB0TGFiZWw6IHN0cmluZztcbiAgICBhY2NlcHRBcmlhTGFiZWw6IHN0cmluZztcbiAgICBhY2NlcHRWaXNpYmxlOiBib29sZWFuO1xuICAgIHJlamVjdEljb246IHN0cmluZztcbiAgICByZWplY3RMYWJlbDogc3RyaW5nO1xuICAgIHJlamVjdEFyaWFMYWJlbDogc3RyaW5nO1xuICAgIHJlamVjdFZpc2libGU6IGJvb2xlYW47XG4gICAgYWNjZXB0QnV0dG9uU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHJlamVjdEJ1dHRvblN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBjbG9zZU9uRXNjYXBlOiBib29sZWFuO1xuICAgIGJsb2NrU2Nyb2xsOiBib29sZWFuO1xuICAgIHJ0bDogYm9vbGVhbjtcbiAgICBjbG9zYWJsZTogYm9vbGVhbjtcbiAgICBhcHBlbmRUbzogYW55O1xuICAgIGtleTogc3RyaW5nO1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHRyYW5zaXRpb25PcHRpb25zOiBzdHJpbmc7XG4gICAgZm9jdXNUcmFwOiBib29sZWFuO1xuICAgIGRlZmF1bHRGb2N1czogc3RyaW5nO1xuICAgIGdldCB2aXNpYmxlKCk6IGFueTtcbiAgICBzZXQgdmlzaWJsZSh2YWx1ZTogYW55KTtcbiAgICBnZXQgcG9zaXRpb24oKTogc3RyaW5nO1xuICAgIHNldCBwb3NpdGlvbih2YWx1ZTogc3RyaW5nKTtcbiAgICBmb290ZXI6IGFueTtcbiAgICBjb250ZW50Vmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uZmlybWF0aW9uOiBDb25maXJtYXRpb247XG4gICAgX3Zpc2libGU6IGJvb2xlYW47XG4gICAgbWFza1Zpc2libGU6IGJvb2xlYW47XG4gICAgZG9jdW1lbnRFc2NhcGVMaXN0ZW5lcjogYW55O1xuICAgIGNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgd3JhcHBlcjogSFRNTEVsZW1lbnQ7XG4gICAgY29udGVudENvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJlV2lkdGg6IG51bWJlcjtcbiAgICBfcG9zaXRpb246IHN0cmluZztcbiAgICB0cmFuc2Zvcm1PcHRpb25zOiBhbnk7XG4gICAgY29uZmlybWF0aW9uT3B0aW9uczogQ29uZmlybWF0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjb25maXJtYXRpb25TZXJ2aWNlOiBDb25maXJtYXRpb25TZXJ2aWNlLCB6b25lOiBOZ1pvbmUsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgY29uZmlnOiBQcmltZU5HQ29uZmlnKTtcbiAgICBvcHRpb24obmFtZTogc3RyaW5nKTogYW55O1xuICAgIG9uQW5pbWF0aW9uU3RhcnQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBvbkFuaW1hdGlvbkVuZChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIGdldEVsZW1lbnRUb0ZvY3VzKCk6IGFueTtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgZW5hYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBkaXNhYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBjbG9zZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICBtb3ZlT25Ub3AoKTogdm9pZDtcbiAgICBnZXRNYXNrQ2xhc3MoKToge1xuICAgICAgICAncC1kaWFsb2ctbWFzayBwLWNvbXBvbmVudC1vdmVybGF5JzogYm9vbGVhbjtcbiAgICAgICAgJ3AtZGlhbG9nLW1hc2stc2Nyb2xsYmxvY2tlcic6IGJvb2xlYW47XG4gICAgfTtcbiAgICBnZXRQb3NpdGlvbkNsYXNzKCk6IHN0cmluZztcbiAgICBiaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgb25PdmVybGF5SGlkZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgYWNjZXB0KCk6IHZvaWQ7XG4gICAgcmVqZWN0KCk6IHZvaWQ7XG4gICAgZ2V0IGFjY2VwdEJ1dHRvbkxhYmVsKCk6IHN0cmluZztcbiAgICBnZXQgcmVqZWN0QnV0dG9uTGFiZWwoKTogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybURpYWxvZ01vZHVsZSB7XG59XG4iXX0=